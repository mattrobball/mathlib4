{"version":1,"references":{"c:Unit":{"usages":[[30,66,30,70]],"definition":null},"c:String.trim":{"usages":[[37,15,37,19],[37,27,37,31]],"definition":null},"c:String":{"usages":[[30,11,30,17],[51,35,51,41],[51,52,51,58]],"definition":null},"c:Pure.pure":{"usages":[[33,18,33,22],[34,17,34,21]],"definition":null},"c:Option.some":{"usages":[[34,23,34,27],[36,9,36,13],[38,13,38,17],[43,11,43,15]],"definition":null},"c:Option.none":{"usages":[[30,56,30,60],[33,23,33,27]],"definition":null},"c:Option":{"usages":[[30,39,30,45]],"definition":null},"c:MonadLiftT":{"usages":[[29,40,29,50]],"definition":null},"c:Monad":{"usages":[[29,30,29,35]],"definition":null},"c:Mathlib.Tactic.successIfFailWithMsg":{"usages":[],"definition":[25,16,25,36]},"c:Mathlib.Tactic.successIfFailWithMessage":{"usages":[[52,4,52,28]],"definition":[29,4,29,28]},"c:Lean.Syntax":{"usages":[[30,46,30,52]],"definition":null},"c:Lean.Parser.Tactic.tacticSeq":{"usages":[[25,75,25,84],[49,53,49,62]],"definition":null},"c:Lean.Parser.Category.term":{"usages":[[25,66,25,70],[49,42,49,46]],"definition":null},"c:Lean.Parser.Category.tactic":{"usages":[[25,87,25,93]],"definition":null},"c:Lean.MonadError":{"usages":[[29,79,29,89]],"definition":null},"c:Lean.MonadBacktrack.saveState":{"usages":[[31,10,31,19]],"definition":null},"c:Lean.MonadBacktrack.restoreState":{"usages":[[35,2,35,14]],"definition":null},"c:Lean.MonadBacktrack":{"usages":[[29,58,29,72]],"definition":null},"c:Lean.MessageData.toString":{"usages":[[34,49,34,57]],"definition":null},"c:Lean.Expr.const":{"usages":[[51,43,51,49]],"definition":null},"c:Lean.Exception.toMessageData":{"usages":[[34,35,34,48]],"definition":null},"c:Lean.Elab.Term.withoutErrToSorry":{"usages":[[50,2,50,24]],"definition":null},"c:Lean.Elab.Term.evalTerm":{"usages":[[51,21,51,34]],"definition":null},"c:Lean.Elab.Tactic.withoutRecover":{"usages":[[50,28,50,42]],"definition":null},"c:Lean.Elab.Tactic.evalTacticSeq":{"usages":[[52,34,52,47]],"definition":null},"c:IO":{"usages":[[29,51,29,53]],"definition":null}},"module":"Mathlib.Tactic.SuccessIfFailWithMsg"}